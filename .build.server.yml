steps:
  - id: 'cache'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker pull ${_REGISTRY_HOST}/$PROJECT_ID/${_SERVICE_NAME}-server:latest || \
        exit 0

  - id: 'latest'
    name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--file', 'Dockerfile',
      '--build-arg', 'BINARY=server',
      '--tag', '${_REGISTRY_HOST}/$PROJECT_ID/${_SERVICE_NAME}-server:latest',
      '--cache-from', '${_REGISTRY_HOST}/$PROJECT_ID/${_SERVICE_NAME}-server:latest',
      '.'
    ]
    wait_for: ['cache']

  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'beta', 'run', 'deploy', '${_SERVICE_NAME}-server',
      '--image', '${_REGISTRY_HOST}/$PROJECT_ID/${_SERVICE_NAME}-server:latest',
      '--region', '${_REGISTRY_REGION}',
      '--platform', 'managed',
      '--add-cloudsql-instances', '${_CLOUD_SQL_INSTANCE_CONNECTION_NAME}',
      '--set-env-vars',
        'INSTANCE_CONNECTION_NAME="${_CLOUD_SQL_INSTANCE_CONNECTION_NAME}"',
      '--allow-unauthenticated'
    ]
    wait_for: ['latest']

substitutions:
  # -- from args
  _CLOUD_SQL_INSTANCE_CONNECTION_NAME: 'foo-bar-baz-qux-quux'
  _SERVICE_NAME: 'eloquentlog-backend-api'

  # -- from .env.deploy
  _ENV: 'development'
  # [deployment]
  _REGISTRY_HOST: 'eu.gcr.io'
  _REGISTRY_REGION: 'europe-west1'
  # [server]
  _ROCKET_HOST: '0.0.0.0'
  _ROCKET_PORT: 8080
  _ROCKET_CLI_COLORS: 'off'
  _ROCKET_KEEP_ALIVE: 0
  # [application]
  _APPLICATION_URL: 'https://example.org'
  # [authentication]
  _AUTHENTICATION_TOKEN_ISSUER: 'org.example.production'
  _AUTHENTICATION_TOKEN_KEY_ID: 'key_id'
  _AUTHENTICATION_TOKEN_SECRET: 'secret'
  # [database]
  _DATABASE_URL: 'postgresql://u$er:pa$$w0rd@/dbname?unix_sock=/cloudsql/${_CLOUD_SQL_INSTANCE_CONNECTION_NAME}/.s.PGSQL.5432'
  # [mailer]
  _MAILER_DOMAIN: 'example.org'
  _MAILER_FROM_EMAIL: 'no-reply@example.org'
  _MAILER_FROM_ALIAS: 'Eloquentlog'
  _MAILER_SMTP_HOST: 'server.tld'
  _MAILER_SMTP_PORT: 465
  _MAILER_SMTP_USERNAME: 'username'
  _MAILER_SMTP_PASSWORD: 'password'
  # [message queue]
  _MESSAGE_QUEUE_URL: 'redis://h0st:6379/0'
  # [session store]
  _SESSION_STORE_URL: 'redis://h0st:6379/2'
  # [verification]
  _VERIFICATION_TOKEN_ISSUER: 'org.example.production'
  _VERIFICATION_TOKEN_KEY_ID: 'key_id'
  _VERIFICATION_TOKEN_SECRET: 'secret'

logsBucket: 'gs://${PROJECT_ID}_cloudbuild/'
timeout: '3600s'
tags: ['latest']
images: ['${_REGISTRY_HOST}/$PROJECT_ID/${_SERVICE_NAME}-server']
